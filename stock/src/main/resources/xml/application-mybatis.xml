<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>${mybatis.db.driverClassName}</value></property>
		<property name="url"><value>${mybatis.db.url}</value></property>
		<property name="username"><value>${mybatis.db.username}</value></property>
		<property name="password"><value>${mybatis.db.password}</value></property>
		<property name="initialSize"><value>${mybatis.db.initialSize}</value></property>
		<property name="maxActive"><value>${mybatis.db.maxActive}</value></property>
		<property name="maxIdle"><value>${mybatis.db.maxIdle}</value></property>
		<property name="minIdle"><value>${mybatis.db.minIdle}</value></property>
		<property name="maxWait"><value>${mybatis.db.maxWait}</value></property>
		<property name="timeBetweenEvictionRunsMillis"><value>${mybatis.db.timeBetweenEvictionRunsMillis}</value></property>
		<property name="testWhileIdle"><value>true</value></property>
	</bean>
	
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/com/sumur/stock/dao/mapper/impl/*Mapper.xml" />
	</bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>      
       <property name="basePackage" value="com.sumur.stock.dao.mapper" />
    </bean>
	
	<!-- 由spring管理mybatis的事务 -->  
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean> 

	<!-- 如果使用@Transactional,就不使用默认配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="update*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="delete*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="execute*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="add*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="insert*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="distribute*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="calculate*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="clear*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="login*" rollback-for="java.lang.Exception" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="service" expression="execution(* com.sumur.stock.service..*.* (..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="service" />	
	</aop:config>	
	
</beans>
